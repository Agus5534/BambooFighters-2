plugins {
    id 'java'
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

group = 'io.github.agus5534'
version = '1.1.0-SNAPSHOT.2'

shadowJar {
    minimize()
}

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        name = 'unnamed-public'
        url = 'https://repo.unnamed.team/repository/unnamed-public/'
    }
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'
    implementation("team.unnamed:gui-menu-api:3.3.2")
    implementation 'team.unnamed:gui-item-api:3.3.2'
    implementation 'team.unnamed:gui-item-skull-api:3.3.2'
    implementation 'team.unnamed:gui-menu-adapt-v1_19_R1:3.3.2:dev'
    implementation 'me.fixeddev:commandflow-bukkit:0.5.2'
    implementation 'org.reflections:reflections:0.10.2'

    implementation 'io.github.agus5534:AgusUtils:2.0'
    annotationProcessor 'io.github.agus5534:AgusUtils:2.0'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
